name: build-and-push

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  build-and-push-image:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Back Extract metadata (tags, labels) for Docker
        id: meta-back
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/michaelcoll/quiz-app-back
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker back image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          pull: true
          push: true
          tags: ${{ steps.meta-back.outputs.tags }}
          labels: ${{ steps.meta-back.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta-back.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta-back.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta-back.outputs.json).labels['org.opencontainers.image.revision'] }}

      - name: Front Extract metadata (tags, labels) for Docker
        id: meta-front
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/michaelcoll/quiz-app-front
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker front image
        uses: docker/build-push-action@v5
        with:
          context: ./internal/web
          platforms: linux/amd64
          pull: true
          push: true
          tags: ${{ steps.meta-front.outputs.tags }}
          labels: ${{ steps.meta-front.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta-front.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta-front.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta-front.outputs.json).labels['org.opencontainers.image.revision'] }}
